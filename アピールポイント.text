技術概要

描画処理: 重い描画処理を効率化するために、C言語でプログラムを記述し、WebAssemblyにコンパイルして実行しています。

UI: ユーザーインターフェースはHTML/CSSを用いて設計。

サーバーサイド: サーバーサイドにはPythonのFlaskを採用。

リアルタイム通信: WebSocketを使用し、スコアランキングのリアルタイム更新を実現。

技術的な詳細

WebAssembly: C言語で実装されたマンデルブロ集合の描画処理をWebGLと連携させ、フラグメントシェーダーを活用することで高速描画を実現。

HTTP通信: クライアントとサーバー間でのスコア送受信にHTTP通信を使用。

WebSocket: ランキングのリアルタイム更新機能を提供。

多言語開発: フロントエンドにJavaScript、サーバーサイドにPython、パフォーマンスクリティカルな部分にCを採用し、多言語のスキルを駆使。

アピールポイント

スキルの幅広さ: JavaScript、Python、Cの3言語を活用し、それぞれの得意分野を活かした開発。

高い技術力: WebAssemblyを活用してWebGLで高速な描画を実現するだけでなく、リアルタイム通信技術も駆使。



このプロジェクトは、多言語での開発やWebAssembly、リアルタイム通信といった現代的な技術を幅広く活用しており、スキルと経験の広さをアピールする絶好の題材となっています。
